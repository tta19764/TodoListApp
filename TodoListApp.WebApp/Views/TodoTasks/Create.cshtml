@using TodoListApp.Services.WebApi.Enums
@model CreateTodoTaskViewModel
@{
	ViewData["Title"] = "Create Task";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
	<div class="row">
		<div class="col-lg-8 mx-auto">
			<div class="card shadow-sm">
				<div class="card-header bg-primary text-white">
					<h4 class="mb-0">Create New Task</h4>
					@if (!string.IsNullOrEmpty(Model.ListTitle))
					{
						<small>in list: @Model.ListTitle</small>
					}
				</div>
				<div class="card-body">
					<form asp-action="Create" method="post">
						<div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

						<input type="hidden" asp-for="ListId" />
						<input type="hidden" asp-for="ReturnUrl" />

						<div class="mb-3">
							<label asp-for="Title" class="form-label">Task Title</label>
							<input asp-for="Title" class="form-control" placeholder="Enter task title" autofocus />
							<span asp-validation-for="Title" class="text-danger"></span>
						</div>

						<div class="mb-3">
							<label asp-for="Description" class="form-label">Description</label>
							<textarea asp-for="Description" class="form-control" rows="4" placeholder="Enter task description (optional)"></textarea>
							<span asp-validation-for="Description" class="text-danger"></span>
						</div>

						<div class="row">
							<div class="col-md-6 mb-3">
								<label asp-for="DueDate" class="form-label">Due Date</label>
								<input asp-for="DueDate" type="date" class="form-control" />
								<span asp-validation-for="DueDate" class="text-danger"></span>
							</div>

							<div class="col-md-6 mb-3">
								<label asp-for="Status" class="form-label">Status</label>
								<select asp-for="Status" class="form-select">
									<option value="@TodoTaskStatus.NotStarted">Not Started</option>
									<option value="@TodoTaskStatus.InProgress">In Progress</option>
									<option value="@TodoTaskStatus.Completed">Completed</option>
								</select>
								<span asp-validation-for="Status" class="text-danger"></span>
							</div>
						</div>

						<div class="d-flex gap-2 justify-content-end mt-4">
							<a href="@Model.ReturnUrl" class="btn btn-secondary">
								<i class="bi bi-x-circle"></i> Cancel
							</a>
							<button type="submit" class="btn btn-primary">
								<i class="bi bi-check-circle"></i> Create Task
							</button>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}