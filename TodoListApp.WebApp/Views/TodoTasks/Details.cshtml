@using Microsoft.AspNetCore.Http.Extensions
@using TodoListApp.Services.WebApi.Enums
@model TodoTaskDetailsViewModel
@{
	ViewData["Title"] = Model.Title;
	Layout = "~/Views/Shared/_Layout.cshtml";
	var isCompleted = Model.Status.Equals("Completed", StringComparison.OrdinalIgnoreCase);
	var isOverdue = Model.DueDate < DateTime.Now && !isCompleted;
}

<div class="container mt-4">
	<div class="row">
		<div class="col-lg-8 mx-auto">
			<!-- Header -->
			<div class="d-flex justify-content-between align-items-center mb-4">
				<div>
					<a href="@Model.ReturnUrl" class="btn btn-outline-secondary btn-sm mb-2">
						<i class="bi bi-arrow-left"></i> Back
					</a>
					<a asp-controller="TodoLists"
					   asp-action="Index"
					   asp-route-listId="@Model.ListId"
					   class="btn btn-outline-primary btn-sm mb-2">
						<i class="bi bi-list-task"></i> Go to List
					</a>
					<h2 class="mb-0 @(isCompleted ? "text-decoration-line-through" : "")">@Model.Title</h2>
				</div>
			</div>

			<!-- Main Card -->
			<div class="card shadow-sm mb-4">
				<div class="card-body">
					<!-- Status Badge -->
					<div class="mb-3">
						<span class="badge @(Model.Status switch
                        {
                            "Not Started" => "bg-secondary",
                            "In Progress" => "bg-info",
                            "Completed" => "bg-success",
                            _ => "bg-secondary"
                        }) p-2">
							@Model.Status
						</span>
						@if (isOverdue)
						{
							<span class="badge bg-danger p-2">Overdue</span>
						}
					</div>

					<!-- Description -->
					<div class="mb-4">
						<h5 class="text-muted mb-2">Description</h5>
						@if (!string.IsNullOrEmpty(Model.Description))
						{
							<p class="mb-0">@Model.Description</p>
						}
						else
						{
							<p class="text-muted mb-0"><em>No description provided</em></p>
						}
					</div>

					<hr />

					<!-- Details Grid -->
					<div class="row g-3">
						<div class="col-md-6">
							<div class="d-flex align-items-center">
								<i class="bi bi-calendar-plus text-primary me-2 fs-5"></i>
								<div>
									<small class="text-muted d-block">Created</small>
									<strong>@Model.CreationDate.ToString("MMM dd, yyyy")</strong>
								</div>
							</div>
						</div>

						<div class="col-md-6">
							<div class="d-flex align-items-center">
								<i class="bi bi-calendar-event @(isOverdue ? "text-danger" : "text-primary") me-2 fs-5"></i>
								<div>
									<small class="text-muted d-block">Due Date</small>
									<strong class="@(isOverdue ? "text-danger" : "")">@Model.DueDate.ToString("MMM dd, yyyy")</strong>
								</div>
							</div>
						</div>

						<div class="col-md-6">
							<div class="d-flex align-items-center">
								<i class="bi bi-person text-primary me-2 fs-5"></i>
								<div>
									<small class="text-muted d-block">Assigned To</small>
									<strong>@Model.OwnerName</strong>
								</div>
							</div>
						</div>

						<div class="col-md-6">
							<div class="d-flex align-items-center">
								<i class="bi bi-flag text-primary me-2 fs-5"></i>
								<div>
									<small class="text-muted d-block">Status</small>
									<strong>@Model.Status</strong>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>

			<!-- Quick Actions -->
			<div class="card shadow-sm mb-4">
				<div class="card-header bg-white">
					<h5 class="mb-0">Actions</h5>
				</div>
				<div class="card-body">
					<div class="d-flex flex-wrap gap-2">
						<form asp-controller="TodoTasks"
						   asp-action="AddComment"
						   asp-route-taskId="@Model.TaskId"
						   asp-route-returnUrl="@(new Uri(Context.Request.GetEncodedUrl(), UriKind.Absolute))"
						   method="post" class="mb-2">
							<button type="submit" class="btn btn-outline-primary w-100 text-start">
								<i class="bi bi-chat-left-text"></i> Add Comment
							</button>
						</form>

						<form asp-controller="TodoTasks"
						   asp-action="AddTag"
						   asp-route-taskId="@Model.TaskId"
						   asp-route-returnUrl="@(new Uri(Context.Request.GetEncodedUrl(), UriKind.Absolute))"
						   method="post" class="mb-2">
							<button type="submit" class="btn btn-outline-success w-100 text-start">
								<i class="bi bi-tag"></i> Add Tag
							</button>
						</form>
					</div>
				</div>
			</div>
		</div>

		<!-- Tags -->
		@if (Model.Tags != null && Model.Tags.Any())
		{
			<div class="card shadow-sm mb-4">
				<div class="card-header bg-white">
					<h5 class="mb-0">Tags</h5>
				</div>
				<div class="card-body">
					<div class="d-flex flex-wrap gap-2">
						@foreach (var tag in Model.Tags)
						{
							<span class="badge bg-info p-2">@tag</span>
						}
					</div>
				</div>
			</div>
		}

		<!-- Comments -->
		@if (Model.Comments != null && Model.Comments.Any())
		{
			<div class="card shadow-sm mb-4">
				<div class="card-header bg-white">
					<h5 class="mb-0">Comments</h5>
				</div>
				<div class="card-body">
					<div class="list-group list-group-flush">
						@foreach (var comment in Model.Comments)
						{
							<div class="list-group-item">
								<p class="mb-0">@comment</p>
							</div>
						}
					</div>
				</div>
			</div>
		}
	</div>
</div>