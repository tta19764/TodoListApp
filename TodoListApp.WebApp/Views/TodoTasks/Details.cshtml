@using Microsoft.AspNetCore.Http.Extensions
@using TodoListApp.Services.Enums
@using TodoListApp.Services.WebApi.Enums
@model TodoTaskDetailsViewModel
@{
	ViewData["Title"] = Model.Title;
	Layout = "~/Views/Shared/_Layout.cshtml";
	var isCompleted = Model.Status.Equals("Completed", StringComparison.OrdinalIgnoreCase);
	var isOverdue = Model.DueDate < DateTime.Now && !isCompleted;
	var canEdit = Model.Role == ListRole.Owner || Model.Role == ListRole.Editor;
}

<div class="container mt-4">
	<div class="row">
		<div class="col-lg-8 mx-auto">
			<!-- Header -->
			<div class="d-flex justify-content-between align-items-center mb-4">
				<div>
					<a href="@Model.ReturnUrl" class="btn btn-outline-secondary btn-sm mb-2">
						<i class="bi bi-arrow-left"></i> Back
					</a>
					<a asp-controller="TodoLists"
					   asp-action="Index"
					   asp-route-listId="@Model.ListId"
					   class="btn btn-outline-primary btn-sm mb-2">
						<i class="bi bi-list-task"></i> Go to List
					</a>
					<h2 class="mb-0 task-details-title @(isCompleted ? "text-decoration-line-through" : "")"
						title="@Model.Title">
						@Model.Title
					</h2>
				</div>
			</div>

			<!-- Main Card -->
			<div class="card shadow-sm mb-4">
				<div class="card-body">
					<!-- Status Badge -->
					<div class="mb-3">
						<span class="badge @(Model.Status switch
                        {
                            "Not Started" => "bg-secondary",
                            "In Progress" => "bg-info",
                            "Completed" => "bg-success",
                            _ => "bg-secondary"
                        }) p-2">
							@Model.Status
						</span>
						@if (isOverdue)
						{
									<span class="badge bg-danger p-2">Overdue</span>
						}
					</div>

					<!-- Description -->
					<div class="mb-4">
						<h5 class="text-muted mb-2">Description</h5>
						@if (!string.IsNullOrEmpty(Model.Description))
						{
									<p class="mb-0">@Model.Description</p>
						}
						else
						{
									<p class="text-muted mb-0"><em>No description provided</em></p>
						}
					</div>

					<hr />

					<!-- Details Grid -->
					<div class="row g-3">
						<div class="col-md-6">
							<div class="d-flex align-items-center">
								<i class="bi bi-calendar-plus text-primary me-2 fs-5"></i>
								<div>
									<small class="text-muted d-block">Created</small>
									<strong>@Model.CreationDate.ToString("MMM dd, yyyy")</strong>
								</div>
							</div>
						</div>

						<div class="col-md-6">
							<div class="d-flex align-items-center">
								<i class="bi bi-calendar-event @(isOverdue ? "text-danger" : "text-primary") me-2 fs-5"></i>
								<div>
									<small class="text-muted d-block">Due Date</small>
									<strong class="@(isOverdue ? "text-danger" : "")">@Model.DueDate.ToString("MMM dd, yyyy")</strong>
								</div>
							</div>
						</div>

						<div class="col-md-6">
							<div class="d-flex align-items-center">
								<i class="bi bi-person text-primary me-2 fs-5"></i>
								<div>
									<small class="text-muted d-block">Assigned To</small>
									<strong>@Model.OwnerName</strong>
								</div>
							</div>
						</div>

						<div class="col-md-6">
							<div class="d-flex align-items-center">
								<i class="bi bi-flag text-primary me-2 fs-5"></i>
								<div>
									<small class="text-muted d-block">Status</small>
									<strong>@Model.Status</strong>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>

			<!-- Quick Actions -->
			@if (canEdit)
			{
					<div class="card shadow-sm mb-4">
						<div class="card-header bg-white">
							<h5 class="mb-0">Actions</h5>
						</div>
						<div class="card-body">
							<div class="d-flex flex-wrap gap-2">
								<a asp-controller="Tags"
								   asp-action="AddTag"
								   asp-route-taskId="@Model.TaskId"
								   asp-route-returnUrl="@(new Uri(Context.Request.GetEncodedUrl(), UriKind.Absolute))"
								   class="btn btn-outline-success">
									<i class="bi bi-tag"></i> Add Tag
								</a>

								<a asp-controller="TodoTasks"
								   asp-action="AddComment"
								   asp-route-taskId="@Model.TaskId"
								   asp-route-returnUrl="@(new Uri(Context.Request.GetEncodedUrl(), UriKind.Absolute))"
								   class="btn btn-outline-primary">
									<i class="bi bi-chat-left-text"></i> Add Comment
								</a>

								<a asp-controller="TodoTasks"
								   asp-action="Edit"
								   asp-route-id="@Model.TaskId"
								   asp-route-returnUrl="@(new Uri(Context.Request.GetEncodedUrl(), UriKind.Absolute))"
							   class="btn btn-outline-warning">
									<i class="bi bi-pencil"></i> Edit
								</a>
							</div>
						</div>
					</div>
			}

			<!-- Tags Section -->
			@if (Model.Tags != null && Model.Tags.Any())
			{
					<div class="card shadow-sm mb-4">
						<div class="card-header bg-white d-flex justify-content-between align-items-center">
							<h5 class="mb-0">
								<i class="bi bi-tags"></i> Tags
							</h5>
						@if (canEdit)
						{
							<small class="text-muted">Click the Ã— to remove a tag</small>
						}
						</div>
						<div class="card-body">
							<div class="d-flex flex-wrap gap-2">
							@foreach (var tag in Model.Tags)
							{
								<div class="tag-item-wrapper d-inline-flex align-items-center me-2 mb-2">
									<a asp-controller="Tags"
									   asp-action="TasksByTag"
									   asp-route-tagId="@tag.Id"
									   asp-route-returnUri="@(new Uri(Context.Request.GetEncodedUrl(), UriKind.Absolute))"
									   class="tag-badge-link d-inline-flex align-items-center text-decoration-none text-white">
										<i class="bi bi-tag-fill me-1"></i>
										<span>@tag.Title</span>
									</a>

									@if (canEdit)
									{
									<form asp-controller="Tags"
										  asp-action="RemoveTag"
										  asp-route-taskId="@Model.TaskId"
										  asp-route-tagId="@tag.Id"
										  asp-route-returnUrl="@(new Uri(Context.Request.GetEncodedUrl(), UriKind.Absolute))"
										  method="post"
										  class="remove-tag-form"
										  onsubmit="return confirm('Are you sure you want to remove this tag?');">
											@Html.AntiForgeryToken()
										<button type="submit" class="remove-tag-btn" title="Remove tag">
											<i class="bi bi-x-lg"></i>
										</button>
									</form>
									}
								</div>
							}
							</div>
						</div>
					</div>
			}
			else
			{
					<div class="card shadow-sm mb-4">
						<div class="card-header bg-white">
							<h5 class="mb-0">
								<i class="bi bi-tags"></i> Tags
							</h5>
						</div>
						<div class="card-body text-center py-4">
							<i class="bi bi-tags text-muted" style="font-size: 2rem;"></i>
							<p class="text-muted mt-2 mb-0">No tags added to this task yet</p>
						@if (canEdit)
						{
									<a asp-controller="Tags"
									   asp-action="AddTag"
									   asp-route-taskId="@Model.TaskId"
									   asp-route-returnUrl="@(new Uri(Context.Request.GetEncodedUrl(), UriKind.Absolute))"
									   class="btn btn-sm btn-outline-success mt-2">
										<i class="bi bi-plus-lg"></i> Add Tag
									</a>
						}
						</div>
					</div>
			}


			<!-- Comments Section -->
			@if (Model.Comments != null && Model.Comments.Any())
			{
				<div class="card shadow-sm mb-4">
					<div class="card-header bg-white d-flex justify-content-between align-items-center">
						<h5 class="mb-0">
							<i class="bi bi-chat-left-text"></i> Comments
						</h5>
					</div>
					<div class="card-body">
						<div class="list-group list-group-flush">
							@foreach (var comment in Model.Comments)
							{
								<div class="list-group-item comment-item">
									<div class="d-flex justify-content-between align-items-start">
										<div class="flex-grow-1">
											<p class="mb-2">@comment.Text</p>
											<small class="text-muted">
												<i class="bi bi-person-circle"></i>
												<strong>@comment.UserName</strong>
											</small>
										</div>
										@if (comment.CanEdit)
										{
											<div class="btn-group btn-group-sm ms-2">
												<a asp-controller="TodoTasks"
												   asp-action="EditComment"
												   asp-route-commentId="@comment.Id"
												   asp-route-taskId="@Model.TaskId"
												   asp-route-returnUrl="@(new Uri(Context.Request.GetEncodedUrl(), UriKind.Absolute))"
												   class="btn btn-outline-secondary btn-icon"
												   title="Edit comment">
													<i class="bi bi-pencil"></i>
												</a>

												<form asp-controller="TodoTasks"
													  asp-action="DeleteComment"
													  asp-route-commentId="@comment.Id"
													  asp-route-taskId="@Model.TaskId"
													  asp-route-returnUrl="@(new Uri(Context.Request.GetEncodedUrl(), UriKind.Absolute))"
													  method="post"
													  class="d-inline"
													  onsubmit="return confirm('Are you sure you want to delete this comment?');">
													@Html.AntiForgeryToken()
													<button type="submit" class="btn btn-outline-danger btn-icon" title="Delete comment">
														<i class="bi bi-trash"></i>
													</button>
												</form>
											</div>
										}
									</div>
								</div>
							}
						</div>
					</div>
				</div>
			}
			else
			{
				<div class="card shadow-sm mb-4">
					<div class="card-header bg-white">
						<h5 class="mb-0">
							<i class="bi bi-chat-left-text"></i> Comments
						</h5>
					</div>
					<div class="card-body text-center py-4">
						<i class="bi bi-chat-left text-muted" style="font-size: 2rem;"></i>
						<p class="text-muted mt-2 mb-0">No comments added to this task yet</p>
						@if (canEdit)
						{
							<a asp-controller="TodoTasks"
							   asp-action="AddComment"
							   asp-route-taskId="@Model.TaskId"
							   asp-route-returnUrl="@(new Uri(Context.Request.GetEncodedUrl(), UriKind.Absolute))"
							   class="btn btn-sm btn-outline-primary mt-2">
								<i class="bi bi-plus-lg"></i> Add Comment
							</a>
						}
					</div>
				</div>
			}
		</div>
	</div>
</div>