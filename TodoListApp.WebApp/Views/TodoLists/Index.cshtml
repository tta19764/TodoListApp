@using Microsoft.AspNetCore.Http.Extensions
@model TodoListsPageViewModel
@{
	ViewData["Title"] = "My Todo Lists";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid mt-4">
	<div class="row">
		<div class="col-md-4 col-lg-3">
			<div class="card shadow-sm">
				<div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
					<h5 class="mb-0">My Lists</h5>
					<a asp-controller="TodoLists" asp-action="Create" class="btn btn-light btn-sm">
						<i class="bi bi-plus-lg"></i> New
					</a>
				</div>
				<div class="card-body p-0">
					@if (Model.TodoLists != null && Model.TodoLists.Any())
					{
						<div class="list-group list-group-flush">
						@foreach (var list in Model.TodoLists)
						{
							<a asp-controller="TodoLists"
							   asp-action="Index"
							   asp-route-listId="@list.ListId"
							   class="list-group-item list-group-item-action todo-list-item @(Model.SelectedListId == list.ListId ? "active" : "")">
								<div class="d-flex w-100 justify-content-between align-items-start">
									<div class="flex-grow-1">
										<h6 class="mb-1">@list.Title</h6>
								@if (!string.IsNullOrEmpty(list.Description))
								{
									<small class="text-muted">@list.Description</small>
								}
									</div>
									<span class="badge bg-secondary rounded-pill">@list.PendingTasks</span>
								</div>
								<div class="mt-2">
									<small class="text-muted">
										<i class="bi bi-shield"></i> @list.UserRole
									</small>
								</div>
							</a>
						}
						</div>
					}
					else
					{
						<div class="text-center py-5">
							<i class="bi bi-inbox text-muted" style="font-size: 3rem;"></i>
							<p class="text-muted mt-3">No lists yet. Create your first one!</p>
							<a asp-controller="TodoLists" asp-action="Create" class="btn btn-primary btn-sm">
								Create List
							</a>
						</div>
					}
				</div>
			</div>

			<!-- Filter Section -->
			<div class="card shadow-sm mt-3">
				<div class="card-body">
					<h6 class="card-title">Filter Lists</h6>
					<form asp-controller="TodoLists" asp-action="Index" method="get">
						<input type="hidden" name="listId" value="@Model.SelectedListId" />

						<div class="form-check">
							<input class="form-check-input" type="radio" name="listFilter" id="filterAll"
								   value="all" @(Model.ListFilter == "all" || string.IsNullOrEmpty(Model.ListFilter) ? "checked" : "")
								   onchange="this.form.submit()">
							<label class="form-check-label" for="filterAll">
								All Lists
							</label>
						</div>
						<div class="form-check">
							<input class="form-check-input" type="radio" name="listFilter" id="filterOwned"
								   value="owned" @(Model.ListFilter == "owned" ? "checked" : "")
								   onchange="this.form.submit()">
							<label class="form-check-label" for="filterOwned">
								My Lists
							</label>
						</div>
						<div class="form-check">
							<input class="form-check-input" type="radio" name="listFilter" id="filterShared"
								   value="shared" @(Model.ListFilter == "shared" ? "checked" : "")
								   onchange="this.form.submit()">
							<label class="form-check-label" for="filterShared">
								Shared With Me
							</label>
						</div>
					</form>
				</div>
			</div>
		</div>

		<!-- Right Panel - Tasks -->
		<div class="col-md-8 col-lg-9">
			<div class="card shadow-sm">
				<div class="card-header bg-white d-flex justify-content-between align-items-center">
					<div>
						@if (Model.SelectedListId.HasValue && Model.SelectedList != null)
						{
								<h5 class="mb-0">@Model.SelectedList.Title</h5>
							@if (!string.IsNullOrEmpty(Model.SelectedList.Description))
							{
										<small class="text-muted">@Model.SelectedList.Description</small>
							}
						}
						else
						{
								<h5 class="mb-0">Select a list to view tasks</h5>
						}
					</div>
					@if (Model.SelectedListId.HasValue)
					{
						<div class="d-flex gap-2">
							@{
								if (Model.SelectedList != null && (Model.SelectedList.UserRole == "Owner" || Model.SelectedList.UserRole == "Editor"))
								{
									<a asp-controller="TodoTasks"
									   asp-action="Create"
									   asp-route-listId="@Model.SelectedListId"
									   asp-route-returnUrl="@(new Uri(Context.Request.GetEncodedUrl(), UriKind.Absolute))"
									   class="btn btn-success btn-sm me-2">
										<i class="bi bi-plus-lg"></i> New Task
									</a>

									<div class="dropdown">
										<button class="btn btn-outline-secondary btn-sm dropdown-toggle"
												type="button"
												data-bs-toggle="dropdown"
												aria-expanded="false">
											<i class="bi bi-three-dots-vertical"></i>
										</button>
										<ul class="dropdown-menu dropdown-menu-end">
											<li>
												<a class="dropdown-item"
												   asp-controller="TodoLists"
												   asp-action="Edit"
												   asp-route-id="@Model.SelectedListId"
												   asp-route-returnUrl="@(new Uri(Context.Request.GetEncodedUrl(), UriKind.Absolute))">
													<i class="bi bi-pencil"></i> Edit List
												</a>
											</li>
											@if (Model.SelectedList.UserRole == "Owner"){
												<li><hr class="dropdown-divider"></li>
												<li>
													<form asp-controller="TodoLists"
														  asp-action="Delete"
														  asp-route-id="@Model.SelectedListId"
														  asp-route-returnUrl="@Url.Action("Index")"
														  method="post"
														  onsubmit="return confirm('Are you sure you want to delete this list and all its tasks? This action cannot be undone!');"
														  class="d-inline">
														<button type="submit" class="dropdown-item text-danger">
															<i class="bi bi-trash"></i> Delete List
														</button>
													</form>
												</li>
											}
										</ul>
									</div>
								}
							}

							<a asp-controller="TodoLists"
							   asp-action="Index"
							   asp-route-listId="@Model.SelectedListId"
							   asp-route-listFilter="@Model.ListFilter"
							   asp-route-taskFilter="@Model.TaskFilter"
							   class="btn btn-outline-secondary btn-sm">
								<i class="bi bi-arrow-clockwise"></i>
							</a>
						</div>
					}
				</div>
				<div class="card-body">
					@if (Model.SelectedListId.HasValue)
					{
						<!-- Task Filter Tabs -->
						<ul class="nav nav-tabs mb-3">
							<li class="nav-item">
								<a class="nav-link @(Model.TaskFilter == "active" || string.IsNullOrEmpty(Model.TaskFilter) ? "active" : "")"
								   asp-controller="TodoLists"
								   asp-action="Index"
								   asp-route-listId="@Model.SelectedListId"
								   asp-route-listFilter="@Model.ListFilter"
								   asp-route-taskFilter="active">
									Active
								</a>
							</li>
							<li class="nav-item">
								<a class="nav-link @(Model.TaskFilter == "notstarted" ? "active" : "")"
								   asp-controller="TodoLists"
								   asp-action="Index"
								   asp-route-listId="@Model.SelectedListId"
								   asp-route-listFilter="@Model.ListFilter"
								   asp-route-taskFilter="notstarted">
									Not Started
								</a>
							</li>
							<li class="nav-item">
								<a class="nav-link @(Model.TaskFilter == "inprogress" ? "active" : "")"
								   asp-controller="TodoLists"
								   asp-action="Index"
								   asp-route-listId="@Model.SelectedListId"
								   asp-route-listFilter="@Model.ListFilter"
								   asp-route-taskFilter="inprogress">
									In Progress
								</a>
							</li>
							<li class="nav-item">
								<a class="nav-link @(Model.TaskFilter == "completed" ? "active" : "")"
								   asp-controller="TodoLists"
								   asp-action="Index"
								   asp-route-listId="@Model.SelectedListId"
								   asp-route-listFilter="@Model.ListFilter"
								   asp-route-taskFilter="completed">
									Completed
								</a>
							</li>
							<li class="nav-item">
								<a class="nav-link @(Model.TaskFilter == "all" ? "active" : "")"
								   asp-controller="TodoLists"
								   asp-action="Index"
								   asp-route-listId="@Model.SelectedListId"
								   asp-route-listFilter="@Model.ListFilter"
								   asp-route-taskFilter="all">
									All
								</a>
							</li>
						</ul>
						<div id="tasksContainer">
							<partial name="_TasksList" model="new TodoTasksListViewModel { Tasks = Model.Tasks, RoleName = Model.SelectedList == null ? string.Empty : Model.SelectedList.UserRole }" />
						</div>
					}
					else
					{
						<div class="text-center py-5">
							<i class="bi bi-list-task text-muted" style="font-size: 4rem;"></i>
							<p class="text-muted mt-3">Select a list from the left panel to view tasks</p>
						</div>
					}
				</div>
			</div>
		</div>
	</div>
</div>